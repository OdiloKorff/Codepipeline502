[build-system]
requires = ["setuptools>=69", "wheel"]
build-backend = "setuptools.build_meta"

[project]
name = "codepipeline"
version = "0.0.0"  # Versionierung erfolgt zur Laufzeit via version.py / git describe
requires-python = ">=3.10"
description = "CodePipeline utilities"
readme = "README.md"
license = "MIT"
authors = [{ name = "Your Name" }]

# Minimale Laufzeit-Abhängigkeiten, soweit wirklich nötig. Viele Imports sind optional/guarded.
dependencies = [
  "structlog>=24.1.0",
  "requests>=2.31.0",
]

[project.optional-dependencies]
# Alles, was die Tests benötigen
 test = [
  "pytest>=8",
  "pytest-cov>=5",
  "httpx>=0.27",
  "fastapi>=0.111",
  "bcrypt>=4.1",
  "PyJWT>=2.8",
  "typer>=0.12",
  "tomli>=2.0; python_version<'3.11'",
  "prometheus-client>=0.20",
  "prometheus-fastapi-instrumentator>=7.0",
  "opentelemetry-api>=1.26",
 ]

[tool.setuptools.packages.find]
where = ["."]
include = ["*"]
exclude = ["tests*", "docs*", ".github*", "*.pyc", "__pycache__*"]

[tool.ruff]
target-version = "py312"
line-length = 120
select = [
    "E",  # pycodestyle errors
    "W",  # pycodestyle warnings
    "F",  # pyflakes
    "I",  # isort
    "B",  # flake8-bugbear
    "C4", # flake8-comprehensions
    "UP", # pyupgrade
]
ignore = [
    "E501",  # line too long, handled by line-length
    "B008",  # do not perform function calls in argument defaults
    "C901",  # too complex
]

[tool.ruff.format]
quote-style = "double"
indent-style = "space"
skip-magic-trailing-comma = false
line-ending = "auto"