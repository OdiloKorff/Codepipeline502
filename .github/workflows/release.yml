name: Release (Build & Publish)
on:
  push: { branches: [ main ] }
  workflow_dispatch: {}
permissions:
  contents: write
  packages: write
concurrency:
  group: release-${{ github.ref }}
  cancel-in-progress: true
env:
  IMAGE_NAME: ghcr.io/${{ github.repository }}/app
jobs:
  build-publish:
    runs-on: ubuntu-latest
    steps:
      - uses: actions/checkout@v4
      - uses: docker/setup-buildx-action@v3
      - name: GHCR Login
        uses: docker/login-action@v3
        with:
          registry: ghcr.io
          username: ${{ github.actor }}
          password: ${{ secrets.GITHUB_TOKEN }}
      - name: Docker meta
        id: meta
        uses: docker/metadata-action@v5
        with:
          images: ${{ env.IMAGE_NAME }}
          tags: |
            type=raw,value=v0.1.${{ github.run_number }}
            type=sha
      - name: Build & Push
        id: bp
        uses: docker/build-push-action@v6
        with:
          context: .
          push: true
          platforms: linux/amd64
          tags: ${{ steps.meta.outputs.tags }}
          labels: ${{ steps.meta.outputs.labels }}
          provenance: false
      - name: Trivy Scan
        if: always()
        run: |
          # Install Trivy
          curl -sfL https://raw.githubusercontent.com/aquasecurity/trivy/main/contrib/install.sh | sh -s -- -b /usr/local/bin v0.25.0
          
          # Scan the image
          trivy image --format table --vuln-type os,library --severity HIGH,CRITICAL --ignore-unfixed ${{ env.IMAGE_NAME }}@${{ steps.bp.outputs.digest }}
        continue-on-error: false
      - name: Trivy Summary
        if: always()
        run: |
          echo "### Trivy Security Scan" >> $GITHUB_STEP_SUMMARY
          echo "- Image: ${{ env.IMAGE_NAME }}@${{ steps.bp.outputs.digest }}" >> $GITHUB_STEP_SUMMARY
          echo "- Scan: HIGH/CRITICAL vulnerabilities only" >> $GITHUB_STEP_SUMMARY
          echo "- Result: ${{ job.status }}" >> $GITHUB_STEP_SUMMARY
      - name: Resolve digest
        id: digest
        run: |
          echo "digest=${{ steps.bp.outputs.digest }}" >> $GITHUB_OUTPUT
          echo "Image: ${{ env.IMAGE_NAME }}@${{ steps.bp.outputs.digest }}" >> $GITHUB_STEP_SUMMARY
      - name: Create GitHub Release
        uses: softprops/action-gh-release@v2
        with:
          tag_name: v0.1.${{ github.run_number }}
          generate_release_notes: true
          body: |
            Image: ${{ env.IMAGE_NAME }}@${{ steps.bp.outputs.digest }} 