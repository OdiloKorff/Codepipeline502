name: Lint

on:
  push:
    branches: [ main ]
  pull_request:
    branches: [ main ]
  workflow_dispatch:
  workflow_call:

permissions:
  contents: read
  pull-requests: read

concurrency:
  group: lint-${{ github.ref }}
  cancel-in-progress: true

jobs:
  lint:
    name: Lint & Static Analysis
    runs-on: ubuntu-latest
    timeout-minutes: 20
    steps:
      - name: Checkout
        uses: actions/checkout@v4

      - name: Set up Python
        uses: actions/setup-python@v5
        with:
          python-version: '3.12'
          cache: 'pip'

      - name: Install tooling
        run: |
          python -m pip install --upgrade pip
          pip install pre-commit black ruff mypy bandit safety

      - name: Pre-commit (all hooks)
        run: pre-commit run --all-files --show-diff-on-failure

      - name: Black (format check)
        run: black --check --diff .

      - name: Ruff (lint)
        run: ruff check .

      - name: Mypy (strict types)
        run: mypy . --strict --pretty

      - name: Bandit (security static)
        run: bandit -r . -x tests

      - name: Safety (dependency vulns - non-blocking)
        run: |
          pip freeze > requirements.lock
          safety check -r requirements.lock || true

      - name: Syntax compile
        run: python -m py_compile $(git ls-files '*.py')

      - name: Summary
        if: always()
        run: |
          echo '### Lint Summary' >> $GITHUB_STEP_SUMMARY
          echo '*Black / Ruff / Mypy / Bandit / Safety executed.*' >> $GITHUB_STEP_SUMMARY
