name: Full CI

on:
  workflow_dispatch:
  push:
    branches: [ main ]
  pull_request:
    branches: [ main ]

permissions:
  contents: read
  pull-requests: read

concurrency:
  group: full-ci-${{ github.ref }}
  cancel-in-progress: true

jobs:
  lint:
    uses: ./.github/workflows/lint.yml  # Reusable lint (if supported)
    # If not using reusable form, include 'with:' or copy steps.

  core-ci:
    runs-on: ubuntu-latest
    needs: lint
    steps:
      - uses: actions/checkout@v4
      - uses: actions/setup-python@v5
        with:
          python-version: '3.12'
          cache: 'pip'
      - name: Install
        run: |
          pip install -U pip
          if [ -f requirements.txt ]; then pip install -r requirements.txt; fi
          pip install pytest
      - name: Unit tests
        run: pytest -q --maxfail=1 --disable-warnings

  build-docs:
    runs-on: ubuntu-latest
    needs: core-ci
    steps:
      - uses: actions/checkout@v4
      - uses: actions/setup-python@v5
        with:
          python-version: '3.12'
      - name: Install doc deps
        run: |
          pip install -U pip
          pip install -r docs/requirements.txt || true
      - name: Build docs
        run: |
          if [ -f docs/Makefile ]; then make -C docs html; fi
      - uses: actions/upload-artifact@v4
        with:
          name: docs-html
          path: docs/_build/html
          if-no-files-found: warn

  package:
    runs-on: ubuntu-latest
    needs: core-ci
    steps:
      - uses: actions/checkout@v4
      - uses: actions/setup-python@v5
        with:
          python-version: '3.12'
      - name: Build
        run: |
          pip install build
          python -m build --wheel --sdist
      - uses: actions/upload-artifact@v4
        with:
          name: dist
          path: dist/*

  notify-slack:
    needs: [ core-ci, build-docs, package ]
    runs-on: ubuntu-latest
    if: always() && env.SLACK_BOT_TOKEN != ''
    steps:
      - name: Slack Notification
        uses: slackapi/slack-github-action@v1.27.0
        with:
          channel-id: ${{ secrets.SLACK_CHANNEL }}
          payload: |
            {"text":"âœ… Full CI pipeline completed for commit ${{ github.sha }}"}
        env:
          SLACK_BOT_TOKEN: ${{ secrets.SLACK_BOT_TOKEN }}

  deploy:
    name: Deploy
    needs: notify-slack
    if: >-
      github.ref == 'refs/heads/main' &&
      needs.notify-slack.result == 'success' &&
      (github.event_name == 'push')
    runs-on: ubuntu-latest
    steps:
      - name: Deploy placeholder
        run: echo "Deploy logic goes here"